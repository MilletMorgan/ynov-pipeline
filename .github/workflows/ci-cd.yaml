name: YNOV pipeline CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      server-python-version:
        description: 'Python version to use on server'
        required: true
        default: '3.11'
        options:
          #- "3.9"
          #- "3.10"
          - "3.11"

permissions:
  contents: write 

jobs:
  build:
    strategy:
      matrix:
        version: 
        #- '3.9'
        #- '3.10'
        - '3.11'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Lint with flake8
        run: |
          flake8 .

      #- name: Lint with black
      #  run: |
      #    black . --check


  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Test with Pytest
        run: |
          pytest --doctest-modules --ignore=server.py
              
      - name: Run test coverage
        run: |
          pytest --cov=. . --doctest-modules --ignore=server.py

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v1.8

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: changed_files
        with:
          files: coverage.svg

      #- name: Commit files
       # if: steps.changed_files.outputs.files_changed == 'true'
        #run: |
         # git config --local user.email "github-actions[bot]@users.noreply.github.com"
          #git config --local user.name "github-actions[bot]"
          #git add coverage.svg
          #git commit -m "Updated coverage.svg"

      #- name: Push changes
       # if: steps.changed_files.outputs.files_changed == 'true'
        #uses: ad-m/github-push-action@master
        #with:
         # github_token: ${{ secrets.github_token }}
          #branch: ${{ github.ref }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: MEP
        run: echo "MEP on server"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Test if website is up ðŸš€
        run: |
          pip install requests
          python -c "import requests; exit(1) if requests.get('https://www.google.fr').status_code != 200 else exit(0)"

  deploy-gh-pages:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Commit files
        run: |
          ls
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './cov_html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  post-on-slack:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Slack message
        run: echo "Pipeline finish with success, or not..."
